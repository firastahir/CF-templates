---
AWSTemplateFormatVersion: '2010-09-09'
Description: DOA Stack with ADOP Gen 5
Mappings:
  RegionMap:
    eu-central-1:
      AMI: ami-337be65c
    eu-west-1:
      AMI: ami-7c491f05
    eu-west-2:
      AMI: ami-ee6a718a
    eu-west-3:
      AMI: ami-bfff49c2
    ca-central-1:
      AMI: ami-dcad28b8
    us-east-1:
      AMI: ami-02e98f78
    us-west-2:
      AMI: ami-a042f4d8
    us-west-1:
      AMI: ami-65e0e305
    ap-southeast-1:
      AMI: ami-d2fa88ae
    ap-southeast-2:
      AMI: ami-b6bb47d4
    ap-northeast-1:
      AMI: ami-25bd2743
    ap-south-1:
      AMI: ami-5d99ce32
Outputs:
  ReleaseNote:
    Description: This is your starting point, please copy this URL into your web browser.
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - DOAEc2Instance
          - PublicIp
        - "/"
Parameters:
  AdopUsername:
    Default: changeme
    Description: ADOP admin account username. Username can not be set to 'admin' or
      'Admin' and it must contain only letters and numbers. Minimum length is 3.
    Type: String
    MinLength: '3'
    AllowedPattern: "(?!admin|Admin)[A-Za-z0-9.]*"
    ConstraintDescription: Username can not be set to 'admin' or 'Admin' and it must
      contain only letters and numbers and minimum length is 3.
  AdopUserPassword:
    NoEcho: 'true'
    Description: ADOP admin account password. Must be at least 8 characters long and
      contain at least one number, and cannot contain word "password" or your username
    Type: String
    MinLength: '8'
    AllowedPattern: "(?!password|Password)[A-Za-z0-9]*([a-zA-Z]+[0-9]+|[0-9]+[a-zA-Z]+)"
    ConstraintDescription: Password must contain only letters and numbers, it must
      contain at least one number, and cannot contain your username or word "password"
  AwsAccessKey:
    NoEcho: 'true'
    Description: AWS Access key for jenkins
    Type: String
    MinLength: '8'
  AwsSecretKey:
    NoEcho: 'true'
    Description: AWS Secret key for jenkins
    Type: String
    MinLength: '8'
  KeyName:
    Description: 'Key-pair name to use. Note : Make sure you choose a key which you
      have.'
    Type: AWS::EC2::KeyPair::KeyName
Resources:
  DOAEc2Instance:
    Properties:
      BlockDeviceMappings:
      - DeviceName: "/dev/sda1"
        Ebs:
          DeleteOnTermination: 'true'
          VolumeSize: 50
          VolumeType: gp2
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - AMI
      InstanceType: m4.xlarge
      KeyName:
        Ref: KeyName
      NetworkInterfaces:
      - AssociatePublicIpAddress: 'true'
        DeleteOnTermination: 'true'
        DeviceIndex: '0'
        GroupSet:
        - Ref: DoaSecurityGroup
        SubnetId:
          Ref: PublicSubnet
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - "-"
          - - Ref: AWS::StackName
            - ADOPInstance
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash\n"
            - 'yum update -y

'
            - 'cat > /etc/yum.repos.d/docker.repo <<-''EOF''

'
            - "[dockerrepo]\n"
            - 'name=Docker Repository

'
            - 'baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/

'
            - 'enabled=1

'
            - 'gpgcheck=1

'
            - 'gpgkey=https://yum.dockerproject.org/gpg

'
            - 'EOF

'
            - |
              echo '
              ==============================================================================='
            - 'echo ''=========================== Installing Yum Packages ===========================''

'
            - |
              echo '===============================================================================
              '
            - 'yum -y install docker-engine-17.05.0.ce-1.el7.centos.x86_64

'
            - 'systemctl daemon-reload && systemctl restart docker

'
            - 'yum -y install wget unzip git

'
            - 'grep ''tcp://0.0.0.0:2375'' /usr/lib/systemd/system/docker.service
              || sed -i ''s#ExecStart\(.*\)$#ExecStart\1 -H tcp://0.0.0.0:2375 -H
              unix:///var/run/docker.sock#'' /usr/lib/systemd/system/docker.service

'
            - 'systemctl daemon-reload && systemctl restart docker

'
            - 'systemctl enable docker.service

'
            - |
              echo '
              ==============================================================================='
            - 'echo ''============================== Installing AWS CLI =============================''

'
            - |
              echo '===============================================================================
              '
            - 'wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm

'
            - 'rpm -Uvh epel-release-6-8.noarch.rpm

'
            - 'easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz

'
            - 'echo ''=========================== Installing Docker Compose ==========================''

'
            - 'curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname
              -s`-`uname -m` > /usr/bin/docker-compose

'
            - 'chmod +x /usr/bin/docker-compose

'
            - 'echo ''=========================== Running Docker Compose ==========================''

'
            - 'export IP=$(hostname --ip-address)

'
            - 'export PUBLIC_IP=$(curl http://instance-data/latest/meta-data/public-ipv4)

'
            - 'export PRIVATE_IP=$(curl http://instance-data/latest/meta-data/local-ipv4)

'
            - export INITIAL_ADMIN_USER=
            - Ref: AdopUsername
            - "\n"
            - export INITIAL_ADMIN_PASSWORD_PLAIN=
            - Ref: AdopUserPassword
            - "\n"
            - 'export JENKINS_TOKEN=gAsuE35s

'
            - 'export DOCKER_HOST=tcp://${PRIVATE_IP}:2375

'
            - 'set -e

'
            - 'mkdir -p /data && cd /data

'
            - 'git clone https://github.com/Accenture/adop-docker-compose

'
            - 'cd /data/adop-docker-compose

'
            - 'git checkout 19b6fa4b50c998dbb98cf03e019d61e14a0a112b

'
            - 'export METADATA_URL=''http://169.254.169.254/latest/meta-data''

'
            - 'export MAC_ADDRESS=$(curl -s ${METADATA_URL}/network/interfaces/macs/)

'
            - 'export AWS_VPC_ID=$(curl -s ${METADATA_URL}/network/interfaces/macs/${MAC_ADDRESS}/vpc-id/)

'
            - 'export AWS_SUBNET_ID=$(curl -s ${METADATA_URL}/network/interfaces/macs/${MAC_ADDRESS}/subnet-id/)

'
            - 'export AWS_AZ=$(curl -s ${METADATA_URL}/placement/availability-zone)

'
            - 'export AWS_DEFAULT_REGION=${AWS_AZ%?}

'
            - 'echo "export AWS_VPC_ID=${AWS_VPC_ID}" > conf/provider/env.provider.aws.sh

'
            - "echo \"export AWS_SUBNET_ID=${AWS_SUBNET_ID}\" >> conf/provider/env.provider.aws.sh
              \n"
            - "echo \"export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}\" >> conf/provider/env.provider.aws.sh
              \n"
            - 'echo "export AWS_INSTANCE_TYPE=''t2.large''" >> conf/provider/env.provider.aws.sh

'
            - echo "export AWS_KEYPAIR='
            - Ref: KeyName
            - '''" >> conf/provider/env.provider.aws.sh

'
            - "./adop compose -i ${PUBLIC_IP} -f etc/aws/default.yml init\n"
            - 'sleep 10

'
            - 'until [[ $(curl -X GET -s ${INITIAL_ADMIN_USER}:${INITIAL_ADMIN_PASSWORD_PLAIN}@${PUBLIC_IP}/jenkins/job/Load_Platform/lastBuild/api/json?pretty=true|grep
              result|cut -d$'' '' -f5|sed ''s|[^a-zA-Z]||g'') == SUCCESS ]]; do echo
              "Load_Platform job not finished, sleeping for 5s"; sleep 5; done

'
            - "./adop target set -t http://${PUBLIC_IP} -u ${INITIAL_ADMIN_USER} -p
              ${INITIAL_ADMIN_PASSWORD_PLAIN}\n"
            - 'cd /data; git clone http://${INITIAL_ADMIN_USER}:${INITIAL_ADMIN_PASSWORD_PLAIN}@${PUBLIC_IP}/gerrit/platform-management.git

'
            - 'cd /data/platform-management

'
            - 'echo "https://github.com/Accenture/adop-cartridge-java.git" > cartridges.txt

'
            - 'echo "https://github.com/Accenture/adop-cartridge-doa-m3.git" >> cartridges.txt

'
            - 'echo "https://github.com/Accenture/adop-cartridge-doa-m5.git" >> cartridges.txt

'
            - 'echo "https://github.com/Accenture/adop-cartridge-docker.git" >> cartridges.txt

'
            - 'echo "https://github.com/Accenture/adop-cartridge-doa-m7-m8.git" >>
              cartridges.txt

'
            - 'git add cartridges.txt && git commit -m "Added DOA cartridges" && git
              push origin master

'
            - 'curl -X POST ${INITIAL_ADMIN_USER}:${INITIAL_ADMIN_PASSWORD_PLAIN}@${PUBLIC_IP}/jenkins/job/Platform_Management/job/Load_Cartridge_List/build
              --data token=$JENKINS_TOKEN

'
            - 'curl -X POST ${INITIAL_ADMIN_USER}:${INITIAL_ADMIN_PASSWORD_PLAIN}@${PUBLIC_IP}/jenkins/job/Platform_Management/job/Setup_Gerrit/build
              --data token=$JENKINS_TOKEN

'
            - 'sleep 10

'
            - 'until [[ $(curl -X GET -s ${INITIAL_ADMIN_USER}:${INITIAL_ADMIN_PASSWORD_PLAIN}@${PUBLIC_IP}/jenkins/job/Platform_Management/job/Load_Cartridge_List/lastBuild/api/json?pretty=true|grep
              result|cut -d$'' '' -f5|sed ''s|[^a-zA-Z]||g'') == SUCCESS ]]; do echo
              "Load_Cartridge_List job not finished, sleeping for 5s"; sleep 5; done

'
            - 'cd /data/adop-docker-compose

'
            - "./adop workspace -w DOA create; sleep 10\n"
            - "./adop project -p Labs -w DOA create; sleep 10\n"
            - "./adop project -p Labs -w DOA load_collection -c https://raw.githubusercontent.com/Accenture/adop-doa-materials/master/Cartridge_Collections/doa_cartridge_collection.json\n"
            - "./adop extension add_credentials -u "
            - Ref: AwsAccessKey
            - " -p "
            - Ref: AwsSecretKey
            - " -i aws\n"
            - 'set +e

'
            - 'curl -X PUT -H ''Content-Type:'' --data-binary ''{"Status" : "SUCCESS",'
            - '"Reason" : "DOA is ready",'
            - '"UniqueId" : "DOAEc2Instance",'
            - '"Data" : "Done"}'' '
            - "\""
            - Ref: DOAWaitConditionHandle
            - "\"\n"
            - "\n"
    Type: AWS::EC2::Instance
    DependsOn:
    - VpcGatewayAttachment
    - PublicSubnetPublicRouteTableAssoc
  DoaSecurityGroup:
    Properties:
      GroupDescription: Enabling access to all IPs and below listed ports
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: '22'
        IpProtocol: tcp
        ToPort: '22'
      - CidrIp: 0.0.0.0/0
        FromPort: '80'
        IpProtocol: tcp
        ToPort: '80'
      - CidrIp: 0.0.0.0/0
        FromPort: '443'
        IpProtocol: tcp
        ToPort: '443'
      - CidrIp: 0.0.0.0/0
        FromPort: '25826'
        IpProtocol: udp
        ToPort: '25826'
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::SecurityGroup
  PublicRouteDefault:
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcInternetGateway
      RouteTableId:
        Ref: PublicRouteTable
    Type: AWS::EC2::Route
    DependsOn: VpcGatewayAttachment
  PublicRouteTable:
    Properties:
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::RouteTable
  PublicSubnet:
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::Subnet
  PublicSubnetPublicRouteTableAssoc:
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet
    Type: AWS::EC2::SubnetRouteTableAssociation
  Vpc:
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
    Type: AWS::EC2::VPC
  VpcGatewayAttachment:
    Properties:
      InternetGatewayId:
        Ref: VpcInternetGateway
      VpcId:
        Ref: Vpc
    Type: AWS::EC2::VPCGatewayAttachment
  VpcInternetGateway:
    Type: AWS::EC2::InternetGateway
  DOAWaitConditionHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
    Properties: {}
  DOAWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: DOAEc2Instance
    Properties:
      Handle:
        Ref: DOAWaitConditionHandle
      Timeout: '1800'
